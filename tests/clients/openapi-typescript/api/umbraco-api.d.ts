/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/umbraco/delivery/api/v1/content": {
    /** @deprecated */
    get: operations["GetContent"];
  };
  "/umbraco/delivery/api/v2/content": {
    get: operations["GetContent2.0"];
  };
  "/umbraco/delivery/api/v1/content/item": {
    /** @deprecated */
    get: operations["GetContentItem"];
  };
  "/umbraco/delivery/api/v1/content/item/{path}": {
    /** @deprecated */
    get: operations["GetContentItemByPath"];
  };
  "/umbraco/delivery/api/v2/content/item/{path}": {
    get: operations["GetContentItemByPath2.0"];
  };
  "/umbraco/delivery/api/v1/content/item/{id}": {
    /** @deprecated */
    get: operations["GetContentItemById"];
  };
  "/umbraco/delivery/api/v2/content/item/{id}": {
    get: operations["GetContentItemById2.0"];
  };
  "/umbraco/delivery/api/v2/content/items": {
    get: operations["GetContentItems2.0"];
  };
  "/umbraco/delivery/api/v1/media": {
    /** @deprecated */
    get: operations["GetMedia"];
  };
  "/umbraco/delivery/api/v2/media": {
    get: operations["GetMedia2.0"];
  };
  "/umbraco/delivery/api/v1/media/item": {
    /** @deprecated */
    get: operations["GetMediaItem"];
  };
  "/umbraco/delivery/api/v1/media/item/{path}": {
    /** @deprecated */
    get: operations["GetMediaItemByPath"];
  };
  "/umbraco/delivery/api/v2/media/item/{path}": {
    get: operations["GetMediaItemByPath2.0"];
  };
  "/umbraco/delivery/api/v1/media/item/{id}": {
    /** @deprecated */
    get: operations["GetMediaItemById"];
  };
  "/umbraco/delivery/api/v2/media/item/{id}": {
    get: operations["GetMediaItemById2.0"];
  };
  "/umbraco/delivery/api/v2/media/items": {
    get: operations["GetMediaItems2.0"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    ApiBlockGridAreaModel: {
      alias?: string;
      /** Format: int32 */
      rowSpan?: number;
      /** Format: int32 */
      columnSpan?: number;
      items?: components["schemas"]["ApiBlockGridItemModel"][];
    };
    ApiBlockGridItemModel: {
      /** Format: int32 */
      rowSpan?: number;
      /** Format: int32 */
      columnSpan?: number;
      /** Format: int32 */
      areaGridColumns?: number;
      areas?: components["schemas"]["ApiBlockGridAreaModel"][];
    } & components["schemas"]["ApiBlockItemModel"];
    ApiBlockGridModel: {
      /** Format: int32 */
      gridColumns?: number;
      items?: components["schemas"]["ApiBlockGridItemModel"][];
    };
    ApiBlockItemModel: {
      content?: components["schemas"]["IApiElementModel"];
      settings?: components["schemas"]["IApiElementModel"];
    };
    ApiBlockListModel: {
      items?: (components["schemas"]["ApiBlockItemModel"] | components["schemas"]["ApiBlockGridItemModel"])[];
    };
    ApiImageCropperValueModel: {
      url?: string;
      focalPoint?: components["schemas"]["ImageFocalPointModel"];
      crops?: components["schemas"]["ImageCropModel"][] | null;
    };
    ApiLinkModel: {
      url?: string | null;
      queryString?: string | null;
      title?: string | null;
      target?: string | null;
      /** Format: uuid */
      destinationId?: string | null;
      destinationType?: string | null;
      route?: components["schemas"]["IApiContentRouteModel"];
      linkType?: components["schemas"]["LinkTypeModel"];
    };
    BlockSettingsElementModel: {
      contentType: "blockSettings";
      properties?: components["schemas"]["BlockSettingsPropertiesModel"];
    } & Omit<components["schemas"]["IApiElementModelBase"], "contentType">;
    BlockSettingsPropertiesModel: {
      anchorId?: string | null;
    };
    HttpValidationProblemDetails: {
      errors?: {
        [key: string]: string[];
      };
      [key: string]: unknown;
    } & components["schemas"]["ProblemDetails"];
    IApiContentModel: components["schemas"]["TestPageContentModel"] | components["schemas"]["TestPageInvariantContentModel"];
    IApiContentModelBase: ({
      contentType: "IApiContentModelBase";
      name?: string | null;
      /** Format: date-time */
      createDate?: string;
      /** Format: date-time */
      updateDate?: string;
      route?: components["schemas"]["IApiContentRouteModel"];
      /** Format: uuid */
      id?: string;
      contentType?: string;
      properties?: {
        [key: string]: unknown;
      };
    }) & Omit<components["schemas"]["IApiElementModelBase"], "contentType">;
    IApiContentResponseModel: components["schemas"]["TestPageContentResponseModel"] | components["schemas"]["TestPageInvariantContentResponseModel"];
    IApiContentResponseModelBase: ({
      contentType: "IApiContentResponseModelBase";
      cultures?: {
        [key: string]: components["schemas"]["IApiContentRouteModel"];
      };
      name?: string | null;
      /** Format: date-time */
      createDate?: string;
      /** Format: date-time */
      updateDate?: string;
      route?: components["schemas"]["IApiContentRouteModel"];
      /** Format: uuid */
      id?: string;
      contentType?: string;
      properties?: {
        [key: string]: unknown;
      };
    }) & Omit<components["schemas"]["IApiContentModelBase"], "contentType">;
    IApiContentRouteModel: {
      path?: string;
      startItem?: components["schemas"]["IApiContentStartItemModel"];
    };
    IApiContentStartItemModel: {
      /** Format: uuid */
      id?: string;
      path?: string;
    };
    IApiElementModel: components["schemas"]["BlockSettingsElementModel"] | components["schemas"]["TestCompositionElementModel"] | components["schemas"]["TestComposition2ElementModel"] | components["schemas"]["TestBlockElementModel"] | components["schemas"]["TestBlock2ElementModel"];
    IApiElementModelBase: {
      /** Format: uuid */
      id?: string;
      contentType?: string;
      properties?: {
        [key: string]: unknown;
      };
    };
    IApiMediaWithCropsModel: {
      focalPoint?: components["schemas"]["ImageFocalPointModel"];
      crops?: (readonly components["schemas"]["ImageCropModel"][]) | null;
      /** Format: uuid */
      id?: string;
      name?: string;
      mediaType?: string;
      url?: string;
      extension?: string | null;
      /** Format: int32 */
      width?: number | null;
      /** Format: int32 */
      height?: number | null;
      /** Format: int32 */
      bytes?: number | null;
      properties?: {
        [key: string]: unknown;
      };
    };
    IApiMediaWithCropsResponseModel: {
      path?: string;
      /** Format: date-time */
      createDate?: string;
      /** Format: date-time */
      updateDate?: string;
      focalPoint?: components["schemas"]["ImageFocalPointModel"];
      crops?: (readonly components["schemas"]["ImageCropModel"][]) | null;
      /** Format: uuid */
      id?: string;
      name?: string;
      mediaType?: string;
      url?: string;
      extension?: string | null;
      /** Format: int32 */
      width?: number | null;
      /** Format: int32 */
      height?: number | null;
      /** Format: int32 */
      bytes?: number | null;
      properties?: {
        [key: string]: unknown;
      };
    };
    ImageCropCoordinatesModel: {
      /** Format: double */
      x1?: number;
      /** Format: double */
      y1?: number;
      /** Format: double */
      x2?: number;
      /** Format: double */
      y2?: number;
    };
    ImageCropModel: {
      alias?: string | null;
      /** Format: int32 */
      width?: number;
      /** Format: int32 */
      height?: number;
      coordinates?: components["schemas"]["ImageCropCoordinatesModel"];
    };
    ImageFocalPointModel: {
      /** Format: double */
      left?: number;
      /** Format: double */
      top?: number;
    };
    /** @enum {string} */
    LinkTypeModel: "Content" | "Media" | "External";
    PagedIApiContentResponseModel: {
      /** Format: int64 */
      total: number;
      items: components["schemas"]["IApiContentResponseModel"][];
    };
    PagedIApiMediaWithCropsResponseModel: {
      /** Format: int64 */
      total: number;
      items: components["schemas"]["IApiMediaWithCropsResponseModel"][];
    };
    PickedColorModel: {
      color?: string;
      label?: string;
    };
    ProblemDetails: {
      type?: string | null;
      title?: string | null;
      /** Format: int32 */
      status?: number | null;
      detail?: string | null;
      instance?: string | null;
      [key: string]: unknown;
    };
    RichTextModel: {
      markup?: string;
      blocks?: (components["schemas"]["ApiBlockItemModel"] | components["schemas"]["ApiBlockGridItemModel"])[];
    };
    TestBlock2ElementModel: {
      contentType: "testBlock2";
      properties?: components["schemas"]["TestBlock2PropertiesModel"];
    } & Omit<components["schemas"]["IApiElementModelBase"], "contentType">;
    TestBlock2PropertiesModel: ({
      thisIsTestBlock2?: string | null;
    }) & components["schemas"]["TestCompositionPropertiesModel"];
    TestBlockElementModel: {
      contentType: "testBlock";
      properties?: components["schemas"]["TestBlockPropertiesModel"];
    } & Omit<components["schemas"]["IApiElementModelBase"], "contentType">;
    TestBlockPropertiesModel: ({
      string?: string | null;
      multinodeTreepicker?: components["schemas"]["IApiContentModel"][] | null;
      blocks?: components["schemas"]["ApiBlockListModel"];
    }) & components["schemas"]["TestCompositionPropertiesModel"];
    TestComposition2ElementModel: {
      contentType: "testComposition2";
      properties?: components["schemas"]["TestComposition2PropertiesModel"];
    } & Omit<components["schemas"]["IApiElementModelBase"], "contentType">;
    TestComposition2PropertiesModel: {
      sharedRadiobox?: string | null;
      sharedRichText?: components["schemas"]["RichTextModel"];
    };
    TestCompositionElementModel: {
      contentType: "testComposition";
      properties?: components["schemas"]["TestCompositionPropertiesModel"];
    } & Omit<components["schemas"]["IApiElementModelBase"], "contentType">;
    TestCompositionPropertiesModel: {
      sharedToggle?: boolean | null;
      sharedString?: string | null;
    };
    TestPageContentModel: {
      contentType: "testPage";
      properties?: components["schemas"]["TestPagePropertiesModel"];
    } & Omit<components["schemas"]["IApiContentModelBase"], "contentType">;
    TestPageContentResponseModel: {
      contentType: "testPage";
    } & Omit<components["schemas"]["IApiContentResponseModelBase"], "contentType"> & components["schemas"]["TestPageContentModel"];
    TestPageInvariantContentModel: {
      contentType: "testPageInvariant";
      properties?: components["schemas"]["TestPageInvariantPropertiesModel"];
    } & Omit<components["schemas"]["IApiContentModelBase"], "contentType">;
    TestPageInvariantContentResponseModel: {
      contentType: "testPageInvariant";
    } & Omit<components["schemas"]["IApiContentResponseModelBase"], "contentType"> & components["schemas"]["TestPageInvariantContentModel"];
    TestPageInvariantPropertiesModel: ({
      textString?: string | null;
      textArea?: string | null;
      /** Format: date-time */
      datePickerWithTime?: string | null;
      /** Format: date-time */
      datePicker?: string | null;
      toggle?: boolean | null;
      /** Format: int32 */
      numeric?: number | null;
      /** Format: double */
      decimal?: number | null;
      /** Format: double */
      slider?: number | null;
      tags?: string[] | null;
      email?: string | null;
      colorPicker?: components["schemas"]["PickedColorModel"];
      contentPicker?: components["schemas"]["IApiContentModel"];
      eyeDropperColorPicker?: string | null;
      urlPicker?: components["schemas"]["ApiLinkModel"][] | null;
      multinodeTreepicker?: components["schemas"]["IApiContentModel"][] | null;
      richText?: components["schemas"]["RichTextModel"];
      blockGrid?: components["schemas"]["ApiBlockGridModel"];
      markdown?: string | null;
      memberGroupPicker?: string[] | null;
      memberPicker?: string | null;
      /** Format: int32 */
      userPicker?: number | null;
      blockList?: components["schemas"]["ApiBlockListModel"];
      checkboxList?: string[] | null;
      dropdown?: string | null;
      radiobox?: string | null;
      repeatableTextstrings?: string[] | null;
      uploadFile?: string | null;
      imageCropper?: components["schemas"]["ApiImageCropperValueModel"];
      mediaPicker?: components["schemas"]["IApiMediaWithCropsModel"][] | null;
    }) & components["schemas"]["TestCompositionPropertiesModel"] & components["schemas"]["TestComposition2PropertiesModel"];
    TestPagePropertiesModel: ({
      textString?: string | null;
      textArea?: string | null;
      /** Format: date-time */
      datePickerWithTime?: string | null;
      /** Format: date-time */
      datePicker?: string | null;
      toggle?: boolean | null;
      /** Format: int32 */
      numeric?: number | null;
      /** Format: double */
      decimal?: number | null;
      /** Format: double */
      slider?: number | null;
      tags?: string[] | null;
      email?: string | null;
      colorPicker?: components["schemas"]["PickedColorModel"];
      contentPicker?: components["schemas"]["IApiContentModel"];
      eyeDropperColorPicker?: string | null;
      urlPicker?: components["schemas"]["ApiLinkModel"][] | null;
      multinodeTreepicker?: components["schemas"]["IApiContentModel"][] | null;
      richText?: components["schemas"]["RichTextModel"];
      blockGrid?: components["schemas"]["ApiBlockGridModel"];
      markdown?: string | null;
      memberGroupPicker?: string[] | null;
      memberPicker?: string | null;
      /** Format: int32 */
      userPicker?: number | null;
      blockList?: components["schemas"]["ApiBlockListModel"];
      checkboxList?: string[] | null;
      dropdown?: string | null;
      radiobox?: string | null;
      repeatableTextstrings?: string[] | null;
      uploadFile?: string | null;
      imageCropper?: components["schemas"]["ApiImageCropperValueModel"];
      mediaPicker?: components["schemas"]["IApiMediaWithCropsModel"][] | null;
    }) & components["schemas"]["TestCompositionPropertiesModel"] & components["schemas"]["TestComposition2PropertiesModel"];
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /** @deprecated */
  GetContent: {
    parameters: {
      query?: {
        /** @description Specifies the content items to fetch. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this. */
        fetch?: string;
        /** @description Defines how to filter the fetched content items. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this. */
        filter?: string[];
        /** @description Defines how to sort the found content items. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this. */
        sort?: string[];
        /** @description Specifies the number of found content items to skip. Use this to control pagination of the response. */
        skip?: number;
        /** @description Specifies the number of found content items to take. Use this to control pagination of the response. */
        take?: number;
        /** @description Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this. */
        expand?: string;
      };
      header?: {
        /** @description Defines the language to return. Use this when querying language variant content items. */
        "Accept-Language"?: string;
        /** @description API key specified through configuration to authorize access to the API. */
        "Api-Key"?: string;
        /** @description Whether to request draft content. */
        Preview?: boolean;
        /** @description URL segment or GUID of a root content item. */
        "Start-Item"?: string;
      };
    };
    responses: {
      /** @description Success */
      200: {
        content: {
          "application/json": components["schemas"]["PagedIApiContentResponseModel"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["ProblemDetails"] | components["schemas"]["HttpValidationProblemDetails"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["ProblemDetails"] | components["schemas"]["HttpValidationProblemDetails"];
        };
      };
    };
  };
  "GetContent2.0": {
    parameters: {
      query?: {
        /** @description Specifies the content items to fetch. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this. */
        fetch?: string;
        /** @description Defines how to filter the fetched content items. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this. */
        filter?: string[];
        /** @description Defines how to sort the found content items. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this. */
        sort?: string[];
        /** @description Specifies the number of found content items to skip. Use this to control pagination of the response. */
        skip?: number;
        /** @description Specifies the number of found content items to take. Use this to control pagination of the response. */
        take?: number;
        /** @description Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this. */
        expand?: string;
        /** @description Explicitly defines which properties should be included in the response (by default all properties are included). Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this. */
        fields?: string;
      };
      header?: {
        /** @description Defines the language to return. Use this when querying language variant content items. */
        "Accept-Language"?: string;
        /** @description API key specified through configuration to authorize access to the API. */
        "Api-Key"?: string;
        /** @description Whether to request draft content. */
        Preview?: boolean;
        /** @description URL segment or GUID of a root content item. */
        "Start-Item"?: string;
      };
    };
    responses: {
      /** @description Success */
      200: {
        content: {
          "application/json": components["schemas"]["PagedIApiContentResponseModel"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["ProblemDetails"] | components["schemas"]["HttpValidationProblemDetails"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["ProblemDetails"] | components["schemas"]["HttpValidationProblemDetails"];
        };
      };
    };
  };
  /** @deprecated */
  GetContentItem: {
    parameters: {
      query?: {
        id?: string[];
        /** @description Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this. */
        expand?: string;
      };
      header?: {
        /** @description Defines the language to return. Use this when querying language variant content items. */
        "Accept-Language"?: string;
        /** @description API key specified through configuration to authorize access to the API. */
        "Api-Key"?: string;
        /** @description Whether to request draft content. */
        Preview?: boolean;
        /** @description URL segment or GUID of a root content item. */
        "Start-Item"?: string;
      };
    };
    responses: {
      /** @description Success */
      200: {
        content: {
          "application/json": components["schemas"]["IApiContentResponseModel"][];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ProblemDetails"] | components["schemas"]["HttpValidationProblemDetails"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ProblemDetails"] | components["schemas"]["HttpValidationProblemDetails"];
        };
      };
    };
  };
  /** @deprecated */
  GetContentItemByPath: {
    parameters: {
      query?: {
        /** @description Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this. */
        expand?: string;
      };
      header?: {
        /** @description Defines the language to return. Use this when querying language variant content items. */
        "Accept-Language"?: string;
        /** @description API key specified through configuration to authorize access to the API. */
        "Api-Key"?: string;
        /** @description Whether to request draft content. */
        Preview?: boolean;
        /** @description URL segment or GUID of a root content item. */
        "Start-Item"?: string;
      };
      path: {
        path: string;
      };
    };
    responses: {
      /** @description Success */
      200: {
        content: {
          "application/json": components["schemas"]["IApiContentResponseModel"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ProblemDetails"] | components["schemas"]["HttpValidationProblemDetails"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ProblemDetails"] | components["schemas"]["HttpValidationProblemDetails"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["ProblemDetails"] | components["schemas"]["HttpValidationProblemDetails"];
        };
      };
    };
  };
  "GetContentItemByPath2.0": {
    parameters: {
      query?: {
        /** @description Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this. */
        expand?: string;
        /** @description Explicitly defines which properties should be included in the response (by default all properties are included). Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this. */
        fields?: string;
      };
      header?: {
        /** @description Defines the language to return. Use this when querying language variant content items. */
        "Accept-Language"?: string;
        /** @description API key specified through configuration to authorize access to the API. */
        "Api-Key"?: string;
        /** @description Whether to request draft content. */
        Preview?: boolean;
        /** @description URL segment or GUID of a root content item. */
        "Start-Item"?: string;
      };
      path: {
        path: string;
      };
    };
    responses: {
      /** @description Success */
      200: {
        content: {
          "application/json": components["schemas"]["IApiContentResponseModel"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ProblemDetails"] | components["schemas"]["HttpValidationProblemDetails"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ProblemDetails"] | components["schemas"]["HttpValidationProblemDetails"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["ProblemDetails"] | components["schemas"]["HttpValidationProblemDetails"];
        };
      };
    };
  };
  /** @deprecated */
  GetContentItemById: {
    parameters: {
      query?: {
        /** @description Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this. */
        expand?: string;
      };
      header?: {
        /** @description Defines the language to return. Use this when querying language variant content items. */
        "Accept-Language"?: string;
        /** @description API key specified through configuration to authorize access to the API. */
        "Api-Key"?: string;
        /** @description Whether to request draft content. */
        Preview?: boolean;
        /** @description URL segment or GUID of a root content item. */
        "Start-Item"?: string;
      };
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Success */
      200: {
        content: {
          "application/json": components["schemas"]["IApiContentResponseModel"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ProblemDetails"] | components["schemas"]["HttpValidationProblemDetails"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ProblemDetails"] | components["schemas"]["HttpValidationProblemDetails"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["ProblemDetails"] | components["schemas"]["HttpValidationProblemDetails"];
        };
      };
    };
  };
  "GetContentItemById2.0": {
    parameters: {
      query?: {
        /** @description Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this. */
        expand?: string;
        /** @description Explicitly defines which properties should be included in the response (by default all properties are included). Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this. */
        fields?: string;
      };
      header?: {
        /** @description Defines the language to return. Use this when querying language variant content items. */
        "Accept-Language"?: string;
        /** @description API key specified through configuration to authorize access to the API. */
        "Api-Key"?: string;
        /** @description Whether to request draft content. */
        Preview?: boolean;
        /** @description URL segment or GUID of a root content item. */
        "Start-Item"?: string;
      };
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Success */
      200: {
        content: {
          "application/json": components["schemas"]["IApiContentResponseModel"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ProblemDetails"] | components["schemas"]["HttpValidationProblemDetails"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ProblemDetails"] | components["schemas"]["HttpValidationProblemDetails"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["ProblemDetails"] | components["schemas"]["HttpValidationProblemDetails"];
        };
      };
    };
  };
  "GetContentItems2.0": {
    parameters: {
      query?: {
        id?: string[];
        /** @description Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this. */
        expand?: string;
        /** @description Explicitly defines which properties should be included in the response (by default all properties are included). Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this. */
        fields?: string;
      };
      header?: {
        /** @description Defines the language to return. Use this when querying language variant content items. */
        "Accept-Language"?: string;
        /** @description API key specified through configuration to authorize access to the API. */
        "Api-Key"?: string;
        /** @description Whether to request draft content. */
        Preview?: boolean;
        /** @description URL segment or GUID of a root content item. */
        "Start-Item"?: string;
      };
    };
    responses: {
      /** @description Success */
      200: {
        content: {
          "application/json": components["schemas"]["IApiContentResponseModel"][];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": components["schemas"]["ProblemDetails"] | components["schemas"]["HttpValidationProblemDetails"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": components["schemas"]["ProblemDetails"] | components["schemas"]["HttpValidationProblemDetails"];
        };
      };
    };
  };
  /** @deprecated */
  GetMedia: {
    parameters: {
      query?: {
        /** @description Specifies the media items to fetch. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this. */
        fetch?: string;
        /** @description Defines how to filter the fetched media items. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this. */
        filter?: string[];
        /** @description Defines how to sort the found media items. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this. */
        sort?: string[];
        /** @description Specifies the number of found media items to skip. Use this to control pagination of the response. */
        skip?: number;
        /** @description Specifies the number of found media items to take. Use this to control pagination of the response. */
        take?: number;
        /** @description Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this. */
        expand?: string;
      };
      header?: {
        /** @description API key specified through configuration to authorize access to the API. */
        "Api-Key"?: string;
      };
    };
    responses: {
      /** @description Success */
      200: {
        content: {
          "application/json": components["schemas"]["PagedIApiMediaWithCropsResponseModel"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["ProblemDetails"] | components["schemas"]["HttpValidationProblemDetails"];
        };
      };
    };
  };
  "GetMedia2.0": {
    parameters: {
      query?: {
        /** @description Specifies the media items to fetch. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this. */
        fetch?: string;
        /** @description Defines how to filter the fetched media items. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this. */
        filter?: string[];
        /** @description Defines how to sort the found media items. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this. */
        sort?: string[];
        /** @description Specifies the number of found media items to skip. Use this to control pagination of the response. */
        skip?: number;
        /** @description Specifies the number of found media items to take. Use this to control pagination of the response. */
        take?: number;
        /** @description Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this. */
        expand?: string;
        /** @description Explicitly defines which properties should be included in the response (by default all properties are included). Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this. */
        fields?: string;
      };
      header?: {
        /** @description API key specified through configuration to authorize access to the API. */
        "Api-Key"?: string;
      };
    };
    responses: {
      /** @description Success */
      200: {
        content: {
          "application/json": components["schemas"]["PagedIApiMediaWithCropsResponseModel"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["ProblemDetails"] | components["schemas"]["HttpValidationProblemDetails"];
        };
      };
    };
  };
  /** @deprecated */
  GetMediaItem: {
    parameters: {
      query?: {
        id?: string[];
        /** @description Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this. */
        expand?: string;
      };
      header?: {
        /** @description API key specified through configuration to authorize access to the API. */
        "Api-Key"?: string;
      };
    };
    responses: {
      /** @description Success */
      200: {
        content: {
          "application/json": components["schemas"]["IApiMediaWithCropsResponseModel"][];
        };
      };
    };
  };
  /** @deprecated */
  GetMediaItemByPath: {
    parameters: {
      query?: {
        /** @description Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this. */
        expand?: string;
      };
      header?: {
        /** @description API key specified through configuration to authorize access to the API. */
        "Api-Key"?: string;
      };
      path: {
        path: string;
      };
    };
    responses: {
      /** @description Success */
      200: {
        content: {
          "application/json": components["schemas"]["IApiMediaWithCropsResponseModel"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["ProblemDetails"] | components["schemas"]["HttpValidationProblemDetails"];
        };
      };
    };
  };
  "GetMediaItemByPath2.0": {
    parameters: {
      query?: {
        /** @description Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this. */
        expand?: string;
        /** @description Explicitly defines which properties should be included in the response (by default all properties are included). Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this. */
        fields?: string;
      };
      header?: {
        /** @description API key specified through configuration to authorize access to the API. */
        "Api-Key"?: string;
      };
      path: {
        path: string;
      };
    };
    responses: {
      /** @description Success */
      200: {
        content: {
          "application/json": components["schemas"]["IApiMediaWithCropsResponseModel"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["ProblemDetails"] | components["schemas"]["HttpValidationProblemDetails"];
        };
      };
    };
  };
  /** @deprecated */
  GetMediaItemById: {
    parameters: {
      query?: {
        /** @description Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this. */
        expand?: string;
      };
      header?: {
        /** @description API key specified through configuration to authorize access to the API. */
        "Api-Key"?: string;
      };
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Success */
      200: {
        content: {
          "application/json": components["schemas"]["IApiMediaWithCropsResponseModel"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["ProblemDetails"] | components["schemas"]["HttpValidationProblemDetails"];
        };
      };
    };
  };
  "GetMediaItemById2.0": {
    parameters: {
      query?: {
        /** @description Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this. */
        expand?: string;
        /** @description Explicitly defines which properties should be included in the response (by default all properties are included). Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this. */
        fields?: string;
      };
      header?: {
        /** @description API key specified through configuration to authorize access to the API. */
        "Api-Key"?: string;
      };
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Success */
      200: {
        content: {
          "application/json": components["schemas"]["IApiMediaWithCropsResponseModel"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["ProblemDetails"] | components["schemas"]["HttpValidationProblemDetails"];
        };
      };
    };
  };
  "GetMediaItems2.0": {
    parameters: {
      query?: {
        id?: string[];
        /** @description Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this. */
        expand?: string;
        /** @description Explicitly defines which properties should be included in the response (by default all properties are included). Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this. */
        fields?: string;
      };
      header?: {
        /** @description API key specified through configuration to authorize access to the API. */
        "Api-Key"?: string;
      };
    };
    responses: {
      /** @description Success */
      200: {
        content: {
          "application/json": components["schemas"]["IApiMediaWithCropsResponseModel"][];
        };
      };
    };
  };
}
