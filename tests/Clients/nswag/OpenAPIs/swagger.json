{
  "openapi": "3.0.1",
  "info": {
    "title": "Umbraco Delivery API",
    "description": "You can find out more about the Umbraco Delivery API in [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api).",
    "version": "Latest"
  },
  "paths": {
    "/umbraco/delivery/api/v1/content": {
      "get": {
        "tags": [
          "Content"
        ],
        "operationId": "GetContent",
        "parameters": [
          {
            "name": "fetch",
            "in": "query",
            "description": "Specifies the content items to fetch. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Select all": {
                "value": ""
              },
              "Select all ancestors of a node by id": {
                "value": "ancestors:id"
              },
              "Select all ancestors of a node by path": {
                "value": "ancestors:path"
              },
              "Select all children of a node by id": {
                "value": "children:id"
              },
              "Select all children of a node by path": {
                "value": "children:path"
              },
              "Select all descendants of a node by id": {
                "value": "descendants:id"
              },
              "Select all descendants of a node by path": {
                "value": "descendants:path"
              }
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Defines how to filter the fetched content items. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "examples": {
              "Default filter": {
                "value": ""
              },
              "Filter by content type": {
                "value": [
                  "contentType:alias1"
                ]
              },
              "Filter by name": {
                "value": [
                  "name:nodeName"
                ]
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Defines how to sort the found content items. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "examples": {
              "Default sort": {
                "value": ""
              },
              "Sort by create date": {
                "value": [
                  "createDate:asc",
                  "createDate:desc"
                ]
              },
              "Sort by level": {
                "value": [
                  "level:asc",
                  "level:desc"
                ]
              },
              "Sort by name": {
                "value": [
                  "name:asc",
                  "name:desc"
                ]
              },
              "Sort by sort order": {
                "value": [
                  "sortOrder:asc",
                  "sortOrder:desc"
                ]
              },
              "Sort by update date": {
                "value": [
                  "updateDate:asc",
                  "updateDate:desc"
                ]
              }
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Specifies the number of found content items to skip. Use this to control pagination of the response.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "take",
            "in": "query",
            "description": "Specifies the number of found content items to take. Use this to control pagination of the response.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": ""
              },
              "Expand all": {
                "value": "all"
              },
              "Expand specific property": {
                "value": "property:alias1"
              },
              "Expand specific properties": {
                "value": "property:alias1,alias2"
              }
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines the language to return. Use this when querying language variant content items.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Default": {
                "value": ""
              },
              "English culture": {
                "value": "en-us"
              }
            }
          },
          {
            "name": "Api-Key",
            "in": "header",
            "description": "API key specified through configuration to authorize access to the API.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Preview",
            "in": "header",
            "description": "Whether to request draft content.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Start-Item",
            "in": "header",
            "description": "URL segment or GUID of a root content item.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedIApiContentResponseModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/umbraco/delivery/api/v1/content/item": {
      "get": {
        "tags": [
          "Content"
        ],
        "operationId": "GetContentItem",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": ""
              },
              "Expand all": {
                "value": "all"
              },
              "Expand specific property": {
                "value": "property:alias1"
              },
              "Expand specific properties": {
                "value": "property:alias1,alias2"
              }
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines the language to return. Use this when querying language variant content items.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Default": {
                "value": ""
              },
              "English culture": {
                "value": "en-us"
              }
            }
          },
          {
            "name": "Api-Key",
            "in": "header",
            "description": "API key specified through configuration to authorize access to the API.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Preview",
            "in": "header",
            "description": "Whether to request draft content.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Start-Item",
            "in": "header",
            "description": "URL segment or GUID of a root content item.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IApiContentResponseModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/umbraco/delivery/api/v1/content/item/{path}": {
      "get": {
        "tags": [
          "Content"
        ],
        "operationId": "GetContentItemByPath",
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": ""
              },
              "Expand all": {
                "value": "all"
              },
              "Expand specific property": {
                "value": "property:alias1"
              },
              "Expand specific properties": {
                "value": "property:alias1,alias2"
              }
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines the language to return. Use this when querying language variant content items.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Default": {
                "value": ""
              },
              "English culture": {
                "value": "en-us"
              }
            }
          },
          {
            "name": "Api-Key",
            "in": "header",
            "description": "API key specified through configuration to authorize access to the API.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Preview",
            "in": "header",
            "description": "Whether to request draft content.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Start-Item",
            "in": "header",
            "description": "URL segment or GUID of a root content item.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IApiContentResponseModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/umbraco/delivery/api/v1/content/item/{id}": {
      "get": {
        "tags": [
          "Content"
        ],
        "operationId": "GetContentItemById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": ""
              },
              "Expand all": {
                "value": "all"
              },
              "Expand specific property": {
                "value": "property:alias1"
              },
              "Expand specific properties": {
                "value": "property:alias1,alias2"
              }
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Defines the language to return. Use this when querying language variant content items.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Default": {
                "value": ""
              },
              "English culture": {
                "value": "en-us"
              }
            }
          },
          {
            "name": "Api-Key",
            "in": "header",
            "description": "API key specified through configuration to authorize access to the API.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Preview",
            "in": "header",
            "description": "Whether to request draft content.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Start-Item",
            "in": "header",
            "description": "URL segment or GUID of a root content item.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IApiContentResponseModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/umbraco/delivery/api/v1/media": {
      "get": {
        "tags": [
          "Media"
        ],
        "operationId": "GetMedia",
        "parameters": [
          {
            "name": "fetch",
            "in": "query",
            "description": "Specifies the media items to fetch. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Select all children at root level": {
                "value": "children:/"
              },
              "Select all children of a media item by id": {
                "value": "children:id"
              },
              "Select all children of a media item by path": {
                "value": "children:path"
              }
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Defines how to filter the fetched media items. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "examples": {
              "Default filter": {
                "value": ""
              },
              "Filter by media type": {
                "value": [
                  "mediaType:alias1"
                ]
              },
              "Filter by name": {
                "value": [
                  "name:nodeName"
                ]
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Defines how to sort the found media items. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "examples": {
              "Default sort": {
                "value": ""
              },
              "Sort by create date": {
                "value": [
                  "createDate:asc",
                  "createDate:desc"
                ]
              },
              "Sort by name": {
                "value": [
                  "name:asc",
                  "name:desc"
                ]
              },
              "Sort by sort order": {
                "value": [
                  "sortOrder:asc",
                  "sortOrder:desc"
                ]
              },
              "Sort by update date": {
                "value": [
                  "updateDate:asc",
                  "updateDate:desc"
                ]
              }
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Specifies the number of found media items to skip. Use this to control pagination of the response.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "take",
            "in": "query",
            "description": "Specifies the number of found media items to take. Use this to control pagination of the response.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": ""
              },
              "Expand all": {
                "value": "all"
              },
              "Expand specific property": {
                "value": "property:alias1"
              },
              "Expand specific properties": {
                "value": "property:alias1,alias2"
              }
            }
          },
          {
            "name": "Api-Key",
            "in": "header",
            "description": "API key specified through configuration to authorize access to the API.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedApiMediaWithCropsResponseModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/umbraco/delivery/api/v1/media/item": {
      "get": {
        "tags": [
          "Media"
        ],
        "operationId": "GetMediaItem",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": ""
              },
              "Expand all": {
                "value": "all"
              },
              "Expand specific property": {
                "value": "property:alias1"
              },
              "Expand specific properties": {
                "value": "property:alias1,alias2"
              }
            }
          },
          {
            "name": "Api-Key",
            "in": "header",
            "description": "API key specified through configuration to authorize access to the API.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiMediaWithCropsResponseModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/umbraco/delivery/api/v1/media/item/{path}": {
      "get": {
        "tags": [
          "Media"
        ],
        "operationId": "GetMediaItemByPath",
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": ""
              },
              "Expand all": {
                "value": "all"
              },
              "Expand specific property": {
                "value": "property:alias1"
              },
              "Expand specific properties": {
                "value": "property:alias1,alias2"
              }
            }
          },
          {
            "name": "Api-Key",
            "in": "header",
            "description": "API key specified through configuration to authorize access to the API.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMediaWithCropsResponseModel"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/umbraco/delivery/api/v1/media/item/{id}": {
      "get": {
        "tags": [
          "Media"
        ],
        "operationId": "GetMediaItemById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "Expand none": {
                "value": ""
              },
              "Expand all": {
                "value": "all"
              },
              "Expand specific property": {
                "value": "property:alias1"
              },
              "Expand specific properties": {
                "value": "property:alias1,alias2"
              }
            }
          },
          {
            "name": "Api-Key",
            "in": "header",
            "description": "API key specified through configuration to authorize access to the API.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMediaWithCropsResponseModel"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ApiBlockGridAreaModel": {
        "type": "object",
        "properties": {
          "alias": {
            "type": "string"
          },
          "rowSpan": {
            "type": "integer",
            "format": "int32"
          },
          "columnSpan": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiBlockGridItemModel"
            }
          }
        },
        "additionalProperties": false
      },
      "ApiBlockGridItemModel": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiBlockItemModel"
          }
        ],
        "properties": {
          "rowSpan": {
            "type": "integer",
            "format": "int32"
          },
          "columnSpan": {
            "type": "integer",
            "format": "int32"
          },
          "areaGridColumns": {
            "type": "integer",
            "format": "int32"
          },
          "areas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiBlockGridAreaModel"
            }
          }
        },
        "additionalProperties": false
      },
      "ApiBlockGridModel": {
        "type": "object",
        "properties": {
          "gridColumns": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiBlockGridItemModel"
            }
          }
        },
        "additionalProperties": false
      },
      "ApiBlockItemModel": {
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/IApiElementModel"
          },
          "settings": {
            "$ref": "#/components/schemas/IApiElementModel"
          }
        },
        "additionalProperties": false
      },
      "ApiBlockListModel": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiBlockItemModel"
            }
          }
        },
        "additionalProperties": false
      },
      "ApiImageCropperValueModel": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "focalPoint": {
            "$ref": "#/components/schemas/ImageCropperFocalPointModel"
          },
          "crops": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImageCropperCropModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApiLinkModel": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "title": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "target": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "destinationId": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "readOnly": true
          },
          "destinationType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "route": {
            "$ref": "#/components/schemas/IApiContentRouteModel"
          },
          "linkType": {
            "$ref": "#/components/schemas/LinkTypeModel"
          }
        },
        "additionalProperties": false
      },
      "ApiMediaWithCropsModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "readOnly": true
          },
          "mediaType": {
            "type": "string",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true
          },
          "extension": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "width": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "height": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "bytes": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "properties": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "focalPoint": {
            "$ref": "#/components/schemas/ImageCropperFocalPointModel"
          },
          "crops": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImageCropperCropModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApiMediaWithCropsResponseModel": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiMediaWithCropsModel"
          }
        ],
        "properties": {
          "path": {
            "type": "string"
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "updateDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "BlockSettingsElementModel": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IApiElementModel"
          }
        ],
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/BlockSettingsPropertiesModel"
          }
        },
        "additionalProperties": false
      },
      "BlockSettingsPropertiesModel": {
        "type": "object",
        "properties": {
          "anchorId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "HttpValidationProblemDetails": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProblemDetails"
          }
        ],
        "properties": {
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "readOnly": true
          }
        },
        "additionalProperties": { }
      },
      "IApiContentModel": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IApiElementModel"
          }
        ],
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "createDate": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updateDate": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "route": {
            "$ref": "#/components/schemas/IApiContentRouteModel"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "contentType": {
            "type": "string",
            "readOnly": true
          },
          "properties": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "discriminator": {
          "propertyName": "contentType",
          "mapping": {
            "testPage": "#/components/schemas/TestPageContentModel",
            "testPageInvariant": "#/components/schemas/TestPageInvariantContentModel"
          }
        }
      },
      "IApiContentResponseModel": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IApiContentModel"
          }
        ],
        "properties": {
          "cultures": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/IApiContentRouteModel"
            },
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "createDate": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updateDate": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "route": {
            "$ref": "#/components/schemas/IApiContentRouteModel"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "contentType": {
            "type": "string",
            "readOnly": true
          },
          "properties": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "discriminator": {
          "propertyName": "contentType",
          "mapping": {
            "testPage": "#/components/schemas/TestPageContentResponseModel",
            "testPageInvariant": "#/components/schemas/TestPageInvariantContentResponseModel"
          }
        }
      },
      "IApiContentRouteModel": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "readOnly": true
          },
          "startItem": {
            "$ref": "#/components/schemas/IApiContentStartItemModel"
          }
        },
        "additionalProperties": false
      },
      "IApiContentStartItemModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "path": {
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "IApiElementModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "contentType": {
            "type": "string",
            "readOnly": true
          },
          "properties": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "discriminator": {
          "propertyName": "contentType",
          "mapping": {
            "testComposition": "#/components/schemas/TestCompositionElementModel",
            "testBlock": "#/components/schemas/TestBlockElementModel",
            "testComposition2": "#/components/schemas/TestComposition2ElementModel",
            "testBlock2": "#/components/schemas/TestBlock2ElementModel",
            "blockSettings": "#/components/schemas/BlockSettingsElementModel"
          }
        }
      },
      "ImageCropperCropCoordinatesModel": {
        "type": "object",
        "properties": {
          "x1": {
            "type": "number",
            "format": "double"
          },
          "y1": {
            "type": "number",
            "format": "double"
          },
          "x2": {
            "type": "number",
            "format": "double"
          },
          "y2": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "ImageCropperCropModel": {
        "type": "object",
        "properties": {
          "alias": {
            "type": "string",
            "nullable": true
          },
          "width": {
            "type": "integer",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "format": "int32"
          },
          "coordinates": {
            "$ref": "#/components/schemas/ImageCropperCropCoordinatesModel"
          }
        },
        "additionalProperties": false
      },
      "ImageCropperFocalPointModel": {
        "type": "object",
        "properties": {
          "left": {
            "type": "number",
            "format": "double"
          },
          "top": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "LinkTypeModel": {
        "enum": [
          "Content",
          "Media",
          "External"
        ],
        "type": "string"
      },
      "PagedApiMediaWithCropsResponseModel": {
        "required": [
          "items",
          "total"
        ],
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiMediaWithCropsResponseModel"
            }
          }
        },
        "additionalProperties": false
      },
      "PagedIApiContentResponseModel": {
        "required": [
          "items",
          "total"
        ],
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IApiContentResponseModel"
            }
          }
        },
        "additionalProperties": false
      },
      "PickedColorModel": {
        "type": "object",
        "properties": {
          "color": {
            "type": "string"
          },
          "label": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "RichTextModel": {
        "type": "object",
        "properties": {
          "markup": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "TestBlock2ElementModel": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IApiElementModel"
          }
        ],
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/TestBlock2PropertiesModel"
          }
        },
        "additionalProperties": false
      },
      "TestBlock2PropertiesModel": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/TestCompositionPropertiesModel"
          }
        ],
        "properties": {
          "thisIsTestBlock2": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "TestBlockElementModel": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IApiElementModel"
          }
        ],
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/TestBlockPropertiesModel"
          }
        },
        "additionalProperties": false
      },
      "TestBlockPropertiesModel": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/TestCompositionPropertiesModel"
          }
        ],
        "properties": {
          "string": {
            "type": "string",
            "nullable": true
          },
          "multinodeTreepicker": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IApiContentModel"
            },
            "nullable": true
          },
          "blocks": {
            "$ref": "#/components/schemas/ApiBlockListModel"
          }
        }
      },
      "TestComposition2ElementModel": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IApiElementModel"
          }
        ],
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/TestComposition2PropertiesModel"
          }
        },
        "additionalProperties": false
      },
      "TestComposition2PropertiesModel": {
        "type": "object",
        "properties": {
          "sharedRadiobox": {
            "type": "string",
            "nullable": true
          },
          "sharedRichText": {
            "$ref": "#/components/schemas/RichTextModel"
          }
        }
      },
      "TestCompositionElementModel": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IApiElementModel"
          }
        ],
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/TestCompositionPropertiesModel"
          }
        },
        "additionalProperties": false
      },
      "TestCompositionPropertiesModel": {
        "type": "object",
        "properties": {
          "sharedToggle": {
            "type": "boolean",
            "nullable": true
          },
          "sharedString": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "TestPageContentModel": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IApiContentModel"
          }
        ],
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/TestPagePropertiesModel"
          }
        },
        "additionalProperties": false
      },
      "TestPageContentResponseModel": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IApiContentResponseModel"
          },
          {
            "$ref": "#/components/schemas/TestPageContentModel"
          }
        ],
        "additionalProperties": false
      },
      "TestPageInvariantContentModel": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IApiContentModel"
          }
        ],
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/TestPageInvariantPropertiesModel"
          }
        },
        "additionalProperties": false
      },
      "TestPageInvariantContentResponseModel": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IApiContentResponseModel"
          },
          {
            "$ref": "#/components/schemas/TestPageInvariantContentModel"
          }
        ],
        "additionalProperties": false
      },
      "TestPageInvariantPropertiesModel": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/TestCompositionPropertiesModel"
          },
          {
            "$ref": "#/components/schemas/TestComposition2PropertiesModel"
          }
        ],
        "properties": {
          "textString": {
            "type": "string",
            "nullable": true
          },
          "textArea": {
            "type": "string",
            "nullable": true
          },
          "datePickerWithTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "datePicker": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "toggle": {
            "type": "boolean",
            "nullable": true
          },
          "numeric": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "decimal": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "slider": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "colorPicker": {
            "$ref": "#/components/schemas/PickedColorModel"
          },
          "contentPicker": {
            "$ref": "#/components/schemas/IApiContentModel"
          },
          "eyeDropperColorPicker": {
            "type": "string",
            "nullable": true
          },
          "urlPicker": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiLinkModel"
            },
            "nullable": true
          },
          "multinodeTreepicker": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IApiContentModel"
            },
            "nullable": true
          },
          "richText": {
            "$ref": "#/components/schemas/RichTextModel"
          },
          "blockGrid": {
            "$ref": "#/components/schemas/ApiBlockGridModel"
          },
          "markdown": {
            "type": "string",
            "nullable": true
          },
          "memberGroupPicker": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "memberPicker": {
            "type": "string",
            "nullable": true
          },
          "userPicker": {
            "nullable": true
          },
          "blockList": {
            "$ref": "#/components/schemas/ApiBlockListModel"
          },
          "checkboxList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "dropdown": {
            "type": "string",
            "nullable": true
          },
          "radiobox": {
            "type": "string",
            "nullable": true
          },
          "repeatableTextstrings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "uploadFile": {
            "type": "string",
            "nullable": true
          },
          "imageCropper": {
            "$ref": "#/components/schemas/ApiImageCropperValueModel"
          },
          "mediaPicker": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiMediaWithCropsModel"
            },
            "nullable": true
          }
        }
      },
      "TestPagePropertiesModel": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/TestCompositionPropertiesModel"
          },
          {
            "$ref": "#/components/schemas/TestComposition2PropertiesModel"
          }
        ],
        "properties": {
          "textString": {
            "type": "string",
            "nullable": true
          },
          "textArea": {
            "type": "string",
            "nullable": true
          },
          "datePickerWithTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "datePicker": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "toggle": {
            "type": "boolean",
            "nullable": true
          },
          "numeric": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "decimal": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "slider": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "colorPicker": {
            "$ref": "#/components/schemas/PickedColorModel"
          },
          "contentPicker": {
            "$ref": "#/components/schemas/IApiContentModel"
          },
          "eyeDropperColorPicker": {
            "type": "string",
            "nullable": true
          },
          "urlPicker": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiLinkModel"
            },
            "nullable": true
          },
          "multinodeTreepicker": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IApiContentModel"
            },
            "nullable": true
          },
          "richText": {
            "$ref": "#/components/schemas/RichTextModel"
          },
          "blockGrid": {
            "$ref": "#/components/schemas/ApiBlockGridModel"
          },
          "markdown": {
            "type": "string",
            "nullable": true
          },
          "memberGroupPicker": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "memberPicker": {
            "type": "string",
            "nullable": true
          },
          "userPicker": {
            "nullable": true
          },
          "blockList": {
            "$ref": "#/components/schemas/ApiBlockListModel"
          },
          "checkboxList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "dropdown": {
            "type": "string",
            "nullable": true
          },
          "radiobox": {
            "type": "string",
            "nullable": true
          },
          "repeatableTextstrings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "uploadFile": {
            "type": "string",
            "nullable": true
          },
          "imageCropper": {
            "$ref": "#/components/schemas/ApiImageCropperValueModel"
          },
          "mediaPicker": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiMediaWithCropsModel"
            },
            "nullable": true
          }
        }
      }
    }
  }
}